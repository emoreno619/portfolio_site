{
  "name": "typed.js",
  "version": "1.1.1",
  "homepage": "https://github.com/mattboldt/typed.js",
  "authors": [
    "Matt Boldt <me@mattboldt.com>"
  ],
  "description": "A jQuery typing animation script",
  "main": "dist/typed.min.js",
  "keywords": [
    "typed",
    "animation"
  ],
  "devDependencies": {
    "gulp": "^3.8.10",
    "gulp-rename": "^1.2.0",
    "gulp-uglify": "^1.1.0"
  },
  "gitHead": "79b9c37b5aed49e758f29d11e0406e595371c0ad",
  "readme": "Typed.js\n========\n\n[View the live demo](http://www.mattboldt.com/demos/typed-js/) | [Go to my site, mattboldt.com](http://www.mattboldt.com)\n\nTyped.js is a jQuery plugin that types. Enter in any string, and watch it type at the speed you've set, backspace what it's typed, and begin a new sentence for however many strings you've set.\n\n---\n\nLooking for some custom use cases for Typed.js? [Check out the wiki](https://github.com/mattboldt/typed.js/wiki)\n\n---\n\nInstallation\n------------\nThis is really all you need to get going.\n\n~~~ javascript\n<script src=\"jquery.js\"></script>\n<script src=\"typed.js\"></script>\n<script>\n\t$(function(){\n\t\t$(\".element\").typed({\n\t\t\tstrings: [\"First sentence.\", \"Second sentence.\"],\n\t\t\ttypeSpeed: 0\n\t\t});\n\t});\n</script>\n...\n\n<span class=\"element\"></span>\n~~~\n\n### Install with Bower\n\n~~~\nbower install typed.js\n~~~\n\n\nWant the animated blinking cursor? Add this CSS.\n\n~~~ scss\n.typed-cursor{\n\topacity: 1;\n\t-webkit-animation: blink 0.7s infinite;\n\t-moz-animation: blink 0.7s infinite;\n\tanimation: blink 0.7s infinite;\n}\n@keyframes blink{\n\t0% { opacity:1; }\n\t50% { opacity:0; }\n\t100% { opacity:1; }\n}\n@-webkit-keyframes blink{\n\t0% { opacity:1; }\n\t50% { opacity:0; }\n\t100% { opacity:1; }\n}\n@-moz-keyframes blink{\n\t0% { opacity:1; }\n\t50% { opacity:0; }\n\t100% { opacity:1; }\n}\n~~~\n\n### HTML tags\n\nBy default the content type is set to `html`, so you're good to go. Want to type out the html regularly? Set it to `text`.\n\n~~~ javascript\n$(\".element\").typed({\n\tstrings: [\"Typed.js is a <strong>jQuery</strong> plugin.\"],\n\tcontentType: 'html' // or 'text'\n});\n~~~\n\n### Line Breaks\n\n#### `contentType: 'html'`\n\n~~~ javascript\n$(\".typed\").typed({ strings: [\"Sentence with <br>line break.\"] });\n~~~\n\n#### `contentType: 'text'`\n\nUse `white-space: pre` in your typed text element, and then `\\n` when typing out the strings. Example:\n\n~~~ html\n\n<span id=\"typed\" style=\"white-space:pre\"></span>\n\n...\n\n$(\".typed\").typed({ strings: [\"Sentence with a\\nline break.\"] });\n\n~~~\n\n### Type Pausing\n\nYou can pause in the middle of a string for a given amount of time by including an escape character.\n\n~~~ javascript\n<script>\n\t$(function(){\n\t\t$(\".element\").typed({\n\t\t\t// Waits 1000ms after typing \"First\"\n\t\t\tstrings: [\"First ^1000 sentence.\", \"Second sentence.\"]\n\t\t});\n\t});\n</script>\n~~~\n\n\nCustomization\n----\n\n~~~ javascript\n<script>\n\t$(function(){\n\t\t$(\".element\").typed({\n\t\t\tstrings: [\"First sentence.\", \"Second sentence.\"],\n\t\t\t// typing speed\n\t\t\ttypeSpeed: 0,\n\t\t\t// time before typing starts\n\t\t\tstartDelay: 0,\n\t\t\t// backspacing speed\n\t\t\tbackSpeed: 0,\n\t\t\t// time before backspacing\n\t\t\tbackDelay: 500,\n\t\t\t// loop\n\t\t\tloop: false,\n\t\t\t// false = infinite\n\t\t\tloopCount: false,\n\t\t\t// show cursor\n\t\t\tshowCursor: true,\n\t\t\t// character for cursor\n\t\t\tcursorChar: \"|\",\n\t\t\t// attribute to type (null == text)\n\t\t\tattr: null,\n\t\t\t// either html or text\n\t\t\tcontentType: 'html',\n\t\t\t// call when done callback function\n\t\t\tcallback: function() {},\n\t\t\t// starting callback function before each string\n\t\t\tpreStringTyped: function() {},\n\t\t\t//callback for every typed string\n\t\t\tonStringTyped: function() {},\n\t\t\t// callback for reset\n\t\t\tresetCallback: function() {}\n\t\t});\n\t});\n</script>\n~~~\n\n\n### Get Super Custom\n\nWant to get really custom? On my site and in the Typed.js demo I have the code type out two words, and then backspace only those two, then continue where it left off. This is done in an `if` statement in the `backspace()` function. Here's what it looks like.\n\n~~~ javascript\n...\n, backspace: function(curString, curStrPos){\n\t...\n\n\tsetTimeout(function() {\n\n\t\t\t// check string array position\n\t\t\t// on the first string, only delete one word\n\t\t\t// the stopNum actually represents the amount of chars to\n\t\t\t// keep in the current string. In my case it's 3.\n\t\t\tif (self.arrayPos == 1){\n\t\t\t\tself.stopNum = 3;\n\t\t\t}\n\t\t\t//every other time, delete the whole typed string\n\t\t\telse{\n\t\t\t\tself.stopNum = 0;\n\t\t\t}\n...\n~~~\n\nThis checks if the `arrayPos` is `1`, which would be the second string you entered. If so, it sets `stopNum` to `3` instead of `0`, which tells it to stop when there are 3 characters left. For now you'll have to create custom `if` statements for each specific case you want. I may automate this somehow in the future.\n\n\nWonderfull sites using Typed.js\n---\nhttp://allison.house/404\n\nhttp://www.maxcdn.com/\n\nhttps://commando.io/\n\nhttp://testdouble.com/agency.html\n\nhttp://www.stephanemartinw.com/\n\nhttp://www.trelab.fi/en/\n\nhttp://jessejohnson.github.io/\n\nhttp://patrickelhage.com/\n\nhttp://tairemadailey.com/\n\n\n## Development\n\n`npm install`\n\nThen, once you've made your edits:\n\n`gulp`\n\nThis will create a minified version in `/dist`\n\n\nend\n---\n\nThanks for checking this out. If you have any questions, I'll be on [Twitter](http://www.twitter.com/atmattb).\n\nIf you're using this, let me know! I'd love to see it.\n\nIt would also be great if you mentioned me or my website somewhere. [www.mattboldt.com](http://www.mattboldt.com)\n\n\n",
  "readmeFilename": "README.md",
  "_id": "typed.js@1.1.1",
  "_shasum": "e53c765c96d5be4105752eeab0086f2afbdeb640",
  "_from": "git://github.com/emoreno619/typed.js.git",
  "_resolved": "git://github.com/emoreno619/typed.js.git#79b9c37b5aed49e758f29d11e0406e595371c0ad",
  "_fromGithub": true
}
